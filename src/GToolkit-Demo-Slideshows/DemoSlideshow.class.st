"
Demos of slides to create in a PrioritySlideshow.
"
Class {
	#name : #DemoSlideshow,
	#superclass : #PrioritySlideshow,
	#category : #'GToolkit-Demo-Slideshows-Slideshows'
}

{ #category : #utility }
DemoSlideshow class >> show [
	"Implement this here just so we can run it directly from the Coder."
	super show
]

{ #category : #page }
DemoSlideshow >> anotherLePage [
	<lePage>
	<gtExample>
	<noTest>
	^ (LePage named: 'Another dynamic page')
		addSnippet: (LeTextSnippet new
				string: 'This page is linked to from [[A dynamic Lepiter page]].';
				yourself);
		yourself
]

{ #category : #slides }
DemoSlideshow >> coder: aSlide [
	<gtSlide>
	<text: 'A live Coder tool'>
	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'Feel free to explore.' asRopedText;
		element: [ GtCoderElement new createInPager maximized ]
]

{ #category : #slides }
DemoSlideshow >> coderOnClass: aSlide [
	<gtSlide>

<text: 'A coder on a class'>

	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'The LudoGame class';
		element: [ (GtCoderElement forClass: GtLudoGame) createInPager maximized ]
]

{ #category : #slides }
DemoSlideshow >> coderOnMethod: aSlide [
	<gtSlide>

<text: 'A coder on a method'>

	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'A coder on an example method';
		element: [ GtPager
				createWrappedOn: (GtPharoMethodCoder forMethod: GtLudoGameExamples >> #playerArolls6)
						asExpandedOnlyElement vFitContentLimited ]
]

{ #category : #accessing }
DemoSlideshow >> demoDatabase [
	"A transient database with links."

	<gtExample>
	^ self database
]

{ #category : #page }
DemoSlideshow >> dynamicLePage [
	<lePage>
	<gtExample>
	<noTest>
	^ (LePage named: 'A dynamic Lepiter page')
		addSnippet: (LeTextSnippet new
				string: 'This page is dynamically created and stored in a transient Lepiter database.';
				yourself);
		addSnippet: (LeTextSnippet new
				string: 'A link to [[Another dynamic page]].';
				yourself);
		addSnippet: (LePharoSnippet new
				code: '''hello''';
				yourself);
		yourself
]

{ #category : #slides }
DemoSlideshow >> dynamicLepiterPage: aSlide [
	<gtSlide>
	<text: 'A dynamic page from the internal database.'>
	^ aSlide lepiterPage
		setPriority;
		startPage: (self database pageNamed: 'A dynamic Lepiter page')
]

{ #category : #'as yet unclassified' }
DemoSlideshow >> embeddedScenery [
	"NB: Generated by GtScenery>>#storeAsExampleMethod -- do not edit."

	<gtExample>
	<noTest>
	| scenery item1 item2 item3 item4 |
	scenery := GtScenery new.
	item1 := scenery
			addItem: (GtSceneryMindMapNodeStencil new
					label: 'This slide shows an example of an embedded Scenery.';
					width: 174.99612935384107) asItem.
	item1 position: -82.23243310786495 @ -160.8546142578125.
	item1 extent: 174.99612935384107 @ 46.0.
	item2 := scenery
			addItem: (GtSceneryMindMapNodeStencil new
					label: 'The Scenery is defined in a method DemoSlideshow>>#embeddedScenery';
					width: 229.8836212158203) asItem.
	item2 position: -213.95583089192712 @ -23.53303019205731.
	item2 extent: 229.8836212158203 @ 46.0.
	item3 := scenery
			addItem: (GtSceneryMindMapNodeStencil new
					label: 'Since the scenery defines #storeStringMethodName: to point to this method, we can edit the scenery and save it without having to directly edit the code of the scenery.';
					width: 231.22046917236958) asItem.
	item3 position: 202.89304606119777 @ -8.765401204427121.
	item3 extent: 231.22046917236958 @ 100.0.
	item4 := scenery
			addItem: (GtSceneryInspectorStencil new target: [ DemoSlideshow >> #embeddedScenery ])
					asItem.
	item4 position: -125.96339925130212 @ 157.80559285481775.
	item4 extent: 626.4814758300781 @ 400.0.
	scenery
		addConnectionWithStencil: (GtSceneryStraightArcStencil new
				curvatureFraction: 0)
		from: item2
		to: item4.
	scenery storeStringMethodName: 'DemoSlideshow>>#embeddedScenery'.
	^ scenery
]

{ #category : #slides }
DemoSlideshow >> embeddedScenery: aSlide [
	<gtSlide>
	<text: 'Embedded Scenery slide'>
	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'An embedded scenery';
		element: [ DemoSlideshow new embeddedScenery ]
]

{ #category : #slides }
DemoSlideshow >> fileLocatorInPager: aSlide [
	<gtSlide>
	<text: 'A File Locator in a Pager'>
	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'A File Locator in a Pager';
		element: [ (GtPager createWrappedOn: (GtInspector newOn: FileLocator gtResource))
				maximized ]
]

{ #category : #slides }
DemoSlideshow >> gtWorld: aSlide [
	<gtSlide>
	<text: 'A live embedded GT world'>
	^ aSlide world setPriority
]

{ #category : #slides }
DemoSlideshow >> gtWorldWithTitle: aSlide [
	<gtSlide>
	<text: 'A live Coder tool'>
	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'Glamorous Toolkit' asRopedText;
		element: [ GtWorldElement new
				knowledgeBase: LeDatabasesRegistry uniqueInstance currentLoadedDefaultLogicalDatabase ]
]

{ #category : #slides }
DemoSlideshow >> headingAndCode: aSlide [
	<gtSlide>
	<text: 'Slide with a heading and code snippets to evaluate'>
	^ aSlide headingAndCode
		setPriority;
		heading: 'Heading';
		addTextSnippet: 'Text snippet';
		addCodeSnippet: '"Code to evaluate."
3+4.'
]

{ #category : #slides }
DemoSlideshow >> inspectorInPager: aSlide [
	<gtSlide>
	<text: 'An Inspector on an object.
NB: the pager is needed so we can navigate to new pages.'>
	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'An Inspector on an object';
		element: [ (GtPager
				createWrappedOn: (GtInspector forObject: GtLudoRecordingGameExamples new gameShowingAllMoves2))
				maximized ]
]

{ #category : #slides }
DemoSlideshow >> inspectorOnObject: aSlide [
	<gtSlide>
	<text: 'Text with an Inspector'>
	"NB: This will work for any object."
	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'An inspector on the image directory';
		element: [ GtInspector newOn: FileLocator imageDirectory ]
]

{ #category : #slides }
DemoSlideshow >> inspectorView: aSlide [
	<gtSlide>
	<text: 'Text with a specific Inspector view'>
	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'A specific Inspector view of the LudoGame';
		element: [ GtLudoGame new gtPlayersFor: GtPhlowProtoView new ]
]

{ #category : #slides }
DemoSlideshow >> inspectorViewInPager: aSlide [
	<gtSlide>
	<text: 'An Inspector view in a Pager'>
	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'An Inspector view in a Pager';
		element: [ (GtPager
				createWrappedOn: (GtLudoGame new gtPlayersFor: GtPhlowProtoView new))
				maximized ]
]

{ #category : #slides }
DemoSlideshow >> lepiterPage: aSlide [
	<gtSlide>
	<text: 'A lepiter page from the GT Book'>
	^ aSlide lepiterPage
		setPriority;
		pageNamed: 'Lepiter' from: 'Glamorous Toolkit Book';
		yourself
]

{ #category : #slides }
DemoSlideshow >> maximizedGtBookPage: aSlide [
	<gtSlide>
	<text: 'A maximized GT book page.'>
	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'A maximized GT book page.';
		element: [ (GtPager
				createWrappedOn: (LePagePhlowTool
						page: (self gtBook pageNamed: 'Working with a REST API: the GitHub case study')))
				maximized ]
]

{ #category : #slides }
DemoSlideshow >> maximizedPage: aSlide [
	<gtSlide>
	<text: 'A maximized lepiter page that can still be browsed.'>
	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'A maximized lepiter page.';
		element: [ (GtPager
				createWrappedOn: (LePagePhlowTool page: (self database pageNamed: 'A dynamic Lepiter page')))
				maximized ]
]

{ #category : #slides }
DemoSlideshow >> multiLineText: aSlide [
	<gtSlide>
	<text: 'Multiple lines with different formatting'>
	^ aSlide text
		setPriority;
		textMargin: 5;
		newTextWithFormat: (self asSubtitle: 'Outline');
		newText: 'default sized text1';
		newText: 'default sized text2';
		newTextWithFormat: (self
				asText: 'Paragraph body.
Possibly over multiple lines.
')
]

{ #category : #slides }
DemoSlideshow >> paragraph: aSlide [
	<gtSlide>
	<text: 'Text with a paragraph'>
	^ aSlide paragraph
		setPriority;
		subtitleWithFormat: (self asSubtitle: 'Outline');
		paragraphWithFormat: (self
				asText: 'Paragraph body.
Possibly over multiple lines.
')
]

{ #category : #slides }
DemoSlideshow >> scenery: aSlide [
	<gtSlide>
	<text: 'Scenery'>
	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'A scenery';
		element: [ GtSceneryExamples new sceneryWithOneInspectorAndOneRectangleAndOneConnection ]
]

{ #category : #slides }
DemoSlideshow >> scriptedExampleInPager: aSlide [
	<gtSlide>
	<text: 'A scripted example in a Pager'>
	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'A scripted example in a Pager';
		element: [ PatternScripterExamples new customViewCustomMovesViewScript ]
]

{ #category : #accessing }
DemoSlideshow >> slidePriorities [
	"Instead of manually setting priorities, just list the slides in order here."
	<gtExample>
	^ #( 
		title:
		titleWithFooters:
		textAndElement:
		textAndImage:
		paragraph:
		multiLineText:
		headingAndCode:
		lepiterPage:
		dynamicLepiterPage:
		maximizedPage:
		maximizedGtBookPage:
		inspectorOnObject:
		inspectorInPager:
		inspectorView:
		inspectorViewInPager:
		scriptedExampleInPager:
		fileLocatorInPager:
		scenery:
		embeddedScenery:
		gtWorld:
		gtWorldWithTitle:
		coder:
		coderOnClass:
		coderOnMethod:
		spotterExampleSlide:
		#summarySlide:
	)
]

{ #category : #slides }
DemoSlideshow >> spotterExampleSlide: aSlide [
	<gtSlide>
	<text: 'A spotter search'>
	^ aSlide spotter setPriority
]

{ #category : #slides }
DemoSlideshow >> summarySlide: aSlide [
	<gtSlide>
	<text: 'A summary slide'>
	| slideSelectors |
	"slideSelectors := #(textAndElement: lepiterPage: inspectorOnObject: gtWorld:)."
	slideSelectors := #(textAndElement: textAndImage: inspectorOnObject: gtWorld:).
	^ aSlide labelAndElement
		setPriority;
		newFadedText: 'A summary slide';
		element: [ self summaryElementFor: slideSelectors ]
]

{ #category : #slides }
DemoSlideshow >> textAndElement: aSlide [
	<gtSlide>
	<text: 'Text with an element'>
	^ aSlide textAndElement
		elementWeight: 0.5;
		setPriority;
		newTextWithFormat: (self asHeader: 'Header') bold , self cr , (self asText: 'description');
		element: [ GtLudoGame new asElement asScalableElement ]
]

{ #category : #slides }
DemoSlideshow >> textAndImage: aSlide [
	<gtSlide>
	<text: 'Text with an image'>
	^ aSlide textAndElement
		elementWeight: 0.60;
		setPriority;
		newTextWithFormat: (self asText: 'This will also work with with any XandElement slide');
		element: [ GtFilePictureLiveSlide new
				fileReference: (GtResourcesUtility
						resourceAtPath: self picturesDirectoryPath / 'smalltalk-80.png') ]
]

{ #category : #slides }
DemoSlideshow >> title: aSlide [ 
	<gtSlide>
	<text: 'A title or header slide'>
	^ (aSlide title)
		"priority: (self priorityFor: #titleSlideFor:);"
		setPriority;
		titleBottomPadding: 30;
		titleWithFormat: (self asTitle: 'Demo Slideshow Title');
		subtitleWithFormat: (self asBigText: 'with a subtitle')
]

{ #category : #slides }
DemoSlideshow >> titleWithFooters: aSlide [
	<gtSlide>
	<text: 'A title slide with multiple, centered texts.'>
	^ (aSlide titleWithFooters)
		setPriority;
		titleWithFormat: (self asTitle: 'Title');
		subtitleWithFormat: (self asSubtitle: 'subtitle');
		newFooterWithFormat: (self asBigText: 'someone@feenk.com') underline;
		newFooterWithFormat: (self asBigText: 'someone.else@feenk.com')
]
