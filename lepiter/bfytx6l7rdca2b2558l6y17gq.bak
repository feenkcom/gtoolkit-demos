{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-01-14T10:44:18.890837+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-01-14T10:44:18.890837+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "SzVRJAnoDQC3tNq8A5FLwQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Looking at Gabi's PhD thesis. The appendix has an FCA intro."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-01-14T10:44:23.493711+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-01-14T10:44:23.493711+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "JHKXJAnoDQC30M/mA5FLwQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "See also\n[](https://upriss.github.io/fca/fcaalgorithms.html)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-01-14T10:44:29.220355+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-01-14T10:44:29.220355+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "V9LuJAnoDQC34zM8A5FLwQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "A Context  C = (E,P,I)\nE = Elements\nP = Properties\nI : E x P (or I : E → P^2 and vv)\n\ns(X) = { p in P | e ∈ X ⇒ (p,e) ∈ I }\nt(Y) = { e in E | p ∈ Y ⇒ (p,e) ∈ I }\n\nA concept is (X,Y) such that Y = s(X) and X = t(Y).\nX is the extent and Y the intent of the concept C.\n\nA subconcept (X',Y') is a concept such that X' ⊆ X, resp. Y ⊆ Y'. (NB: note the reversal.)\n\nTop and Bottom are then (E,∅) and (∅,P).\n\nWe can compute the meet/join or a a set of concepts by computing the unions and intersections of the elements and properties."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-01-14T10:44:25.147393+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-01-14T10:44:25.147393+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "KqmwJAnoDQC32AQKA5FLwQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Basics"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-01-14T10:44:35.553082+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-01-14T10:44:35.553082+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "uXNPJQnoDQC3+W5lA5FLwQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Start with:\nBottom = (t(s(∅)), s(∅))\n\nThen compute t(s(e)) for each e ∈ E.\nThis yields a set of concepts at the next level.\nContinue to compute the join of each pair of concepts.\nContinue up all levels top the Top."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-01-14T10:44:31.64951+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-01-14T10:44:31.64951+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "iuMTJQnoDQC37r5kA5FLwQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Bottom-up algorithm"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-01-14T10:44:42.696492+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-01-14T10:44:42.696492+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "mXO8JQnoDQC4Ea3rA5FLwQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "From the concepts we want to construct a lattice which has edges for every pair of concepts c1 < c2, but without transitive edges.\nThis is “transitive reduction”."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-01-14T10:44:49.839498+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-01-14T10:44:49.839498+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "OHIpJgnoDQC4LUS8A5FLwQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "[](https://math.stackexchange.com/questions/3847005/constructing-hasse-diagram-from-a-relation)"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-01-14T10:44:05.175851+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-01-14T10:44:51.494685+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "RPJ/IwnoDQC3nOrFA5FLwQ=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "[](https://en.m.wikipedia.org/wiki/Transitive_reduction\n\n\n"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-01-14T10:44:37.76997+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-01-14T10:44:37.76997+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "nkdxJQnoDQC4BT5qA5FLwQ=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Lattice construction"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-01-14T10:44:05.14023+01:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-01-14T10:44:05.14023+01:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "FCA Definition"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "0a667f23-09e8-0d00-b79b-237d03914bc1"
	}
}